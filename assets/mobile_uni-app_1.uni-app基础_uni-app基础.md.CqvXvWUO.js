import{_ as a,c as i,a2 as n,o as t}from"./chunks/framework.QcI9UzYB.js";const e="/vitepress-blog/assets/wx_app_id.JT7U4orQ.png",p="/vitepress-blog/assets/settings_path.D1m3UPW-.png",l="/vitepress-blog/assets/wx_developer_port.6zEtPEzk.png",h="/vitepress-blog/assets/wx_%E8%B0%83%E8%AF%95%E5%9F%BA%E6%9C%AC%E5%BA%93.n5I8mifS.png",r="/vitepress-blog/assets/%E6%A8%A1%E6%8B%9F%E7%BD%91%E7%BB%9C%E9%94%99%E8%AF%AF.CBXaQLiy.png",o="/vitepress-blog/assets/%E7%94%9F%E6%88%90%E9%AA%A8%E6%9E%B6%E5%B1%8F.D4levjCn.png",E="/vitepress-blog/assets/vscode_jsonc.7cBZasVn.png",y=JSON.parse('{"title":"uni-app 基础","description":"","frontmatter":{},"headers":[],"relativePath":"mobile/uni-app/1.uni-app基础/uni-app基础.md","filePath":"mobile/uni-app/1.uni-app基础/uni-app基础.md"}'),k={name:"mobile/uni-app/1.uni-app基础/uni-app基础.md"};function d(c,s,u,g,F,b){return t(),i("div",null,s[0]||(s[0]=[n('<h1 id="uni-app-基础" tabindex="-1">uni-app 基础 <a class="header-anchor" href="#uni-app-基础" aria-label="Permalink to &quot;uni-app 基础&quot;">​</a></h1><h2 id="_1、hbuilderx-创建-uni-app-项目" tabindex="-1">1、HBuilderX 创建 uni-app 项目 <a class="header-anchor" href="#_1、hbuilderx-创建-uni-app-项目" aria-label="Permalink to &quot;1、HBuilderX 创建 uni-app 项目&quot;">​</a></h2><h3 id="hbuildx" tabindex="-1">HBuildX <a class="header-anchor" href="#hbuildx" aria-label="Permalink to &quot;HBuildX&quot;">​</a></h3><h4 id="manifest-json" tabindex="-1">manifest.json <a class="header-anchor" href="#manifest-json" aria-label="Permalink to &quot;manifest.json&quot;">​</a></h4><p><img src="'+e+'" alt="wx_app_id"></p><h4 id="小程序运行配置" tabindex="-1">小程序运行配置 <a class="header-anchor" href="#小程序运行配置" aria-label="Permalink to &quot;小程序运行配置&quot;">​</a></h4><p>工具 -&gt; 设置 -&gt; 运行配置 -&gt; 微信开发者工具路径</p><p><img src="'+p+'" alt="settings_path"></p><div class="info custom-block github-alert"><p class="custom-block-title">INFO</p><p></p><p>如果改动代码后，模拟器没有更新，则关闭模拟器，重新云心</p></div><h2 id="_2、微信开发者工具" tabindex="-1">2、微信开发者工具 <a class="header-anchor" href="#_2、微信开发者工具" aria-label="Permalink to &quot;2、微信开发者工具&quot;">​</a></h2><h3 id="服务端口" tabindex="-1">服务端口 <a class="header-anchor" href="#服务端口" aria-label="Permalink to &quot;服务端口&quot;">​</a></h3><p>设置 -&gt; 安全 -&gt; 服务端口</p><p><img src="'+l+'" alt=""></p><h3 id="调试基础库" tabindex="-1">调试基础库 <a class="header-anchor" href="#调试基础库" aria-label="Permalink to &quot;调试基础库&quot;">​</a></h3><p><img src="'+h+'" alt="wx_调试基本库"></p><h3 id="模拟网络错误" tabindex="-1">模拟网络错误 <a class="header-anchor" href="#模拟网络错误" aria-label="Permalink to &quot;模拟网络错误&quot;">​</a></h3><p><img src="'+r+'" alt="模拟网络错误"></p><h3 id="生成骨架屏" tabindex="-1">生成骨架屏 <a class="header-anchor" href="#生成骨架屏" aria-label="Permalink to &quot;生成骨架屏&quot;">​</a></h3><p><img src="'+o+`" alt="生成骨架屏"></p><h2 id="_3、命令行创建-uni-app-项目" tabindex="-1">3、命令行创建 uni-app 项目 <a class="header-anchor" href="#_3、命令行创建-uni-app-项目" aria-label="Permalink to &quot;3、命令行创建 uni-app 项目&quot;">​</a></h2><h3 id="创建项目" tabindex="-1">创建项目 <a class="header-anchor" href="#创建项目" aria-label="Permalink to &quot;创建项目&quot;">​</a></h3><p>Vite + Vue 3 + TypeScript</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> degit</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> dcloudio/uni-preset-vue#vite-ts</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> 项目名称</span></span></code></pre></div><div class="info custom-block github-alert"><p class="custom-block-title">INFO</p><p></p><p>受版本的影响很大</p><p>uni-app 锁定版本 3.0.0-alpha-3081220230802001</p><p>Vue - Official 插件锁定版本 1.8.27</p></div><h3 id="运行项目" tabindex="-1">运行项目 <a class="header-anchor" href="#运行项目" aria-label="Permalink to &quot;运行项目&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> dev:mp-weixin</span></span></code></pre></div><p>运行之后会提示：打开 微信开发者工具, 导入 dist\\dev\\mp-weixin 运行。</p><h3 id="安装插件" tabindex="-1">安装插件 <a class="header-anchor" href="#安装插件" aria-label="Permalink to &quot;安装插件&quot;">​</a></h3><p><strong>uni-create-view</strong></p><p><strong>uni-helper</strong></p><p><strong>uniapp小程序扩展</strong></p><h3 id="ts-类型校验" tabindex="-1">ts 类型校验 <a class="header-anchor" href="#ts-类型校验" aria-label="Permalink to &quot;ts 类型校验&quot;">​</a></h3><p>安装类型声明文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span>npm i -D miniprogram-api-typings @uni-helper/uni-app-types</span></span></code></pre></div><p><strong>tsconfig.json</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">  &quot;compilerOptions&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">    &quot;types&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;@dcloudio/types&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;miniprogram-api-typings&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;@uni-helper/uni-app-types&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">  &quot;vueCompilerOptions&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">    &quot;nativeTags&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;block&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;component&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;template&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;slot&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="json-注释问题" tabindex="-1">json 注释问题 <a class="header-anchor" href="#json-注释问题" aria-label="Permalink to &quot;json 注释问题&quot;">​</a></h3><p>文件 -&gt; 首选项 -&gt; 设置，搜索：文件关联</p><p>添加 manifest.json 和 pages.json，值设置为 jsonc。允许在这2个 json 文件里写注释</p><p><img src="`+E+`" alt="vscode_jsonc"></p><h2 id="_4、路由配置" tabindex="-1">4、路由配置 <a class="header-anchor" href="#_4、路由配置" aria-label="Permalink to &quot;4、路由配置&quot;">​</a></h2><div class="info custom-block github-alert"><p class="custom-block-title">INFO</p><p></p><p>修改页面配置后，要重新启动才能生效</p></div><h3 id="pages-json" tabindex="-1">pages.json <a class="header-anchor" href="#pages-json" aria-label="Permalink to &quot;pages.json&quot;">​</a></h3><h4 id="pages" tabindex="-1">pages <a class="header-anchor" href="#pages" aria-label="Permalink to &quot;pages&quot;">​</a></h4><ul><li>pages节点的第一项为应用入口页（即首页）</li><li><strong>应用中新增/减少页面</strong>，都需要对 pages 数组进行修改</li><li>文件名<strong>不需要写后缀</strong>，框架会自动寻找路径下的页面资源</li></ul><h4 id="tabbar" tabindex="-1">tabBar <a class="header-anchor" href="#tabbar" aria-label="Permalink to &quot;tabBar&quot;">​</a></h4><ul><li>tabBar 中的 list 是一个数组，只能配置最少2个、最多5个 tab，tab 按数组的顺序排序。</li></ul><h3 id="uni-ui" tabindex="-1">uni-ui <a class="header-anchor" href="#uni-ui" aria-label="Permalink to &quot;uni-ui&quot;">​</a></h3><p>参考 <a href="https://zh.uniapp.dcloud.io/component/uniui/quickstart.html#npm%E5%AE%89%E8%A3%85" target="_blank" rel="noreferrer">官方文档</a>，使用 uni-ui 组件库</p><h2 id="_5、部署-h5" tabindex="-1">5、部署 h5 <a class="header-anchor" href="#_5、部署-h5" aria-label="Permalink to &quot;5、部署 h5&quot;">​</a></h2><p>如果想要将 h5 应用部署到二级目录中，需要在<code>manifest.json</code>文件中配置相应的二级目录路径。</p><p>在<code>h5</code>节点下，设置<code>router</code>的<code>base</code>路径为二级目录名称。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">    &quot;h5&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">        &quot;router&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">            &quot;base&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;/uniapp-example/&quot;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>nginx 配置</p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">server</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  listen </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">      80</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  server_name </span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> localhost;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  location</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> ^~</span><span style="--shiki-light:#DBEDFF;--shiki-dark:#DBEDFF;"> /uniapp-example </span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">    alias </span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  html/uniapp-example/h5;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">    try_files </span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">$uri $uri/ /index.html </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">last</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,55)]))}const q=a(k,[["render",d]]);export{y as __pageData,q as default};
