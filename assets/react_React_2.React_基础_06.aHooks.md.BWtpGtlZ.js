import{_ as i,c as a,a2 as n,o as t}from"./chunks/framework.QcI9UzYB.js";const o=JSON.parse('{"title":"aHooks","description":"","frontmatter":{},"headers":[],"relativePath":"react/React/2.React_基础/06.aHooks.md","filePath":"react/React/2.React_基础/06.aHooks.md"}'),e={name:"react/React/2.React_基础/06.aHooks.md"};function h(l,s,k,p,E,r){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="ahooks" tabindex="-1">aHooks <a class="header-anchor" href="#ahooks" aria-label="Permalink to &quot;aHooks&quot;">​</a></h1><h2 id="userequest" tabindex="-1">useRequest <a class="header-anchor" href="#userequest" aria-label="Permalink to &quot;useRequest&quot;">​</a></h2><ul><li><p>可以手动触发，也可以自动触发</p></li><li><p>防抖、延迟执行</p></li><li><p>当某一个 state 值变化时，触发执行</p></li></ul><p>如果 <strong>service 是 函数</strong>，则需要自己在函数内部发送请求</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">loading</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">run</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> useRequest</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(changeUsername, {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  manual: </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 手动触发</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    loadingDelay: </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 延迟执行</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    debounceWait: </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">300</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 防抖</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    refreshDeps: [userId], </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 当某一个 state 值变化时，触发执行</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>如果 <strong>service 是 string、object</strong>，则会调用内部的 Fetch 发送请求</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// url</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">data</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">error</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">loading</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> useRequest</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;/api/userInfo&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// config</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">data</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">error</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">loading</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> useRequest</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  url: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;/api/changeUsername&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  method: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;post&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="usedynamiclist" tabindex="-1">useDynamicList <a class="header-anchor" href="#usedynamiclist" aria-label="Permalink to &quot;useDynamicList&quot;">​</a></h2><p>用来创建 动态表格、动态表单</p><h2 id="useclickaway" tabindex="-1">useClickAway <a class="header-anchor" href="#useclickaway" aria-label="Permalink to &quot;useClickAway&quot;">​</a></h2><p>只能用在原生 HTML 元素上，与 Element Plus 的 v-click-outside 作用相同</p>`,11)]))}const c=i(e,[["render",h]]);export{o as __pageData,c as default};
