import{_ as i,c as a,a2 as n,o as t}from"./chunks/framework.QcI9UzYB.js";const l="/vitepress-blog/assets/github-pages.DoHpr6M5.png",c=JSON.parse('{"title":"Docsify","description":"","frontmatter":{},"headers":[],"relativePath":"notes/其他/Docsify.md","filePath":"notes/其他/Docsify.md"}'),p={name:"notes/其他/Docsify.md"};function e(h,s,k,E,d,r){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="docsify" tabindex="-1">Docsify <a class="header-anchor" href="#docsify" aria-label="Permalink to &quot;Docsify&quot;">​</a></h1><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> docsify-cli</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> -g</span></span></code></pre></div><h2 id="初始化" tabindex="-1">初始化 <a class="header-anchor" href="#初始化" aria-label="Permalink to &quot;初始化&quot;">​</a></h2><p>在存放文档的目录里，执行 init 命令初始化，创建 docs 文件夹</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">docsify</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> ./docs</span></span></code></pre></div><ul><li>docs 目录下的文件 <ul><li>index.html 入口文件</li><li>README.md 作为首页渲染</li></ul></li></ul><blockquote><p>[!ATTENTION]</p><p>文件夹下所有的目录、文件名都 <span style="color:red;font-weight:bold;">不要包含空格</span>，否则会导致如下的异常情况</p><ol><li>图片不能加载</li><li>链接不能跳转 <em>( 如果链接里空格，需要转换成 %20 )</em></li><li>左侧的sidebar不能加载目录</li></ol></blockquote><h2 id="本地预览文档" tabindex="-1">本地预览文档 <a class="header-anchor" href="#本地预览文档" aria-label="Permalink to &quot;本地预览文档&quot;">​</a></h2><p>进入docs目录，运行本地服务器 <code>docsify serve</code>，然后在浏览器中打开 <a href="http://localhost:3000" target="_blank" rel="noreferrer">http://localhost:3000</a> 即可。</p><blockquote><p>docsify serve</p></blockquote><h2 id="index-html" tabindex="-1">index.html <a class="header-anchor" href="#index-html" aria-label="Permalink to &quot;index.html&quot;">​</a></h2><h3 id="本地资源" tabindex="-1">本地资源 <a class="header-anchor" href="#本地资源" aria-label="Permalink to &quot;本地资源&quot;">​</a></h3><ul><li><p>所有依赖的第三方库，都放在 <code>assets / lib</code> 目录下，成为本地资源，无需访问网络。在内网或者没有网络的环境，也可以使用。</p></li><li><p>docsify 使用了 Google Fonts，所以也要下载到本地，并修改 docsify 的样式文件</p><p><strong>vue.min.css</strong></p></li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* @import url(&quot;https://fonts.googleapis.com/css?family=Roboto+Mono|Source+Sans+Pro:300,400,600&quot;); */</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 使用本地 Google Fonts */</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> url</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;../../Google Fonts/Source Sans Pro.css&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="侧边栏" tabindex="-1">侧边栏 <a class="header-anchor" href="#侧边栏" aria-label="Permalink to &quot;侧边栏&quot;">​</a></h3><p>在不同的目录，使用不同的侧边栏</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span>- docs</span></span>
<span class="line"><span>  - get-start      (首页)</span></span>
<span class="line"><span>    - _sidebar.md  (首页的侧边栏)</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>  - JavaScript</span></span>
<span class="line"><span>    - _sidebar.md  (JavaScript目录，及其所有的子目录，都使用这个侧边栏)</span></span>
<span class="line"><span>  </span></span>
<span class="line"><span>  - Vue3</span></span>
<span class="line"><span>    - _sidebar.md  (Vue3目录，及其所有的子目录，都使用这个侧边栏)</span></span></code></pre></div><p>解决方式</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">window.$docsify </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  ...</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 不同的目录，使用不同的侧边栏</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  alias: {</span></span>
<span class="line"><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">    &#39;/docs/JavaScript(.*)/_sidebar.md&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;/docs/JavaScript/_sidebar.md&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">    &#39;/docs/Vue3(.*)/_sidebar.md&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;/docs/Vue3/_sidebar.md&#39;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="图片" tabindex="-1">图片 <a class="header-anchor" href="#图片" aria-label="Permalink to &quot;图片&quot;">​</a></h3><p>所有图片都使用相对路径，保证在本地可以正常查看。比如</p><div class="language-markdown vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">![](</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;--shiki-light-text-decoration:underline;--shiki-dark-text-decoration:underline;">../../assets/images/JavaScript/原型链.png</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>在页面渲染时，将图片上的相对路径都去掉，保证图片可以正常查看。比如</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;assets/images/JavaScript/原型链.png&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div><p>解决方式</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">window.$docsify </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  ...</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 解决图片加载的问题</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  markdown: {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    renderer: {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">      image</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">href</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">title</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">        const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> mediaPath</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> &#39;assets&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">        const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> regex</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> RegExp</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;^(.*)&#39;</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> mediaPath);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">        const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> path</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> href.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">replace</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(regex, mediaPath);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> \`&lt;img src=&quot;\${</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">path</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">}&quot; data-origin=&quot;\${</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">path</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">}&quot; alt=&quot;\${</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">title</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">}&quot;&gt;\`</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="部署到-github" tabindex="-1">部署到 GitHub <a class="header-anchor" href="#部署到-github" aria-label="Permalink to &quot;部署到 GitHub&quot;">​</a></h2><p>配置 GitHub Pages，选择部署 main 分支</p><p><img src="`+l+'" alt="github-pages"></p>',30)]))}const g=i(p,[["render",e]]);export{c as __pageData,g as default};
