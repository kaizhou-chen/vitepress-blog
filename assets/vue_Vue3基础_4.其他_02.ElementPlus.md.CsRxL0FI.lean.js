import{_ as a,c as i,a2 as n,o as t}from"./chunks/framework.QcI9UzYB.js";const o=JSON.parse('{"title":"Element Plus","description":"","frontmatter":{},"headers":[],"relativePath":"vue/Vue3基础/4.其他/02.ElementPlus.md","filePath":"vue/Vue3基础/4.其他/02.ElementPlus.md"}'),e={name:"vue/Vue3基础/4.其他/02.ElementPlus.md"};function l(h,s,p,k,E,r){return t(),i("div",null,s[0]||(s[0]=[n(`<h1 id="element-plus" tabindex="-1">Element Plus <a class="header-anchor" href="#element-plus" aria-label="Permalink to &quot;Element Plus&quot;">​</a></h1><h2 id="图标" tabindex="-1">图标 <a class="header-anchor" href="#图标" aria-label="Permalink to &quot;图标&quot;">​</a></h2><p>安装</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> @element-plus/icons-vue</span></span></code></pre></div><p><strong>main.ts</strong></p><p>全局注册所有图标组件</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 导入所有图标，并命名为 Icons</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> as</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> Icons </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> &#39;@element-plus/icons-vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 通过遍历的方式注册所有svg组件，会牺牲一点点性能</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> Icons) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // @ts-ignore</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  app.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">component</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(i, Icons[i])</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h2><p><strong>组件按需导入</strong></p><p>具体步骤查看 <a href="https://element-plus.org/zh-CN/guide/quickstart.html" target="_blank" rel="noreferrer">参考文档</a></p><h3 id="select-组件-支持全选" tabindex="-1">Select 组件，支持全选 <a class="header-anchor" href="#select-组件-支持全选" aria-label="Permalink to &quot;Select 组件，支持全选&quot;">​</a></h3><p>用 checkbox group 包装 el-option</p><h3 id="table-表头排序、自定义筛选" tabindex="-1">Table 表头排序、自定义筛选 <a class="header-anchor" href="#table-表头排序、自定义筛选" aria-label="Permalink to &quot;Table 表头排序、自定义筛选&quot;">​</a></h3><ul><li>需要后端排序的列，将 <code>sortable</code> 设置为 <code>custom</code></li></ul><table tabindex="0"><thead><tr><th>事件</th><th>说明</th><th></th></tr></thead><tbody><tr><td>sort-change</td><td>排序条件发生变化</td><td></td></tr><tr><td>filter-change</td><td>筛选条件发生变化</td><td></td></tr><tr><td>selection-change</td><td>选择项发生变化</td><td></td></tr></tbody></table><h3 id="table-拖拽排序" tabindex="-1">Table 拖拽排序 <a class="header-anchor" href="#table-拖拽排序" aria-label="Permalink to &quot;Table 拖拽排序&quot;">​</a></h3><p>使用 sortablejs 进行拖拽排序</p><h3 id="文件上传进度条" tabindex="-1">文件上传进度条 <a class="header-anchor" href="#文件上传进度条" aria-label="Permalink to &quot;文件上传进度条&quot;">​</a></h3><p>文件上传</p><ul><li>请求头 Content-Type 设置为 multipart/form-data</li><li>通过 axios 提供的 onUploadProgress 获取上传进度</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">axios.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">post</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(url, formData, {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  headers: {</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;Content-Type&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;multipart/form-data&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  onUploadProgress</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /** event.loaded 已上传大小 */</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>文件下载</p><ul><li>响应类型 responseType: &#39;blob&#39;</li><li>通过 axios 提供的 onDownloadProgress 获取下载进度</li><li>接口需要设置响应头 content-length 为文件大小</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">axios.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(url, {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  responseType: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;blob&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  onDownloadProgress</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /** event.loaded 已下载大小 */</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> (event.lengthComputable) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">      const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> progress</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> event.loaded </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> event.total</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="图片路径" tabindex="-1">图片路径 <a class="header-anchor" href="#图片路径" aria-label="Permalink to &quot;图片路径&quot;">​</a></h3>`,25)]))}const c=a(e,[["render",l]]);export{o as __pageData,c as default};
