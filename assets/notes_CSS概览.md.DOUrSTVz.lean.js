import{_ as i,c as a,a2 as n,o as l}from"./chunks/framework.QcI9UzYB.js";const o=JSON.parse('{"title":"CSS 概览","description":"","frontmatter":{},"headers":[],"relativePath":"notes/CSS概览.md","filePath":"notes/CSS概览.md"}'),t={name:"notes/CSS概览.md"};function h(e,s,p,k,E,r){return l(),a("div",null,s[0]||(s[0]=[n(`<h1 id="css-概览" tabindex="-1">CSS 概览 <a class="header-anchor" href="#css-概览" aria-label="Permalink to &quot;CSS 概览&quot;">​</a></h1><h2 id="_1、响应式布局" tabindex="-1">1、响应式布局 <a class="header-anchor" href="#_1、响应式布局" aria-label="Permalink to &quot;1、响应式布局&quot;">​</a></h2><p>响应式布局的核心思想是适应性，即网页内容可以根据用户所使用设备的屏幕大小、分辨率自动调整展示效果。</p><h3 id="基本原理" tabindex="-1">基本原理 <a class="header-anchor" href="#基本原理" aria-label="Permalink to &quot;基本原理&quot;">​</a></h3><ul><li>‌<strong>适应性</strong>‌：网页内容可以根据用户所使用的设备屏幕大小和分辨率自动调整展示效果。</li><li>‌<strong>‌流式布局</strong>‌：使用相对长度单位（如百分比）代替绝对长度单位（如像素），使页面元素能根据屏幕宽度自由调整。</li><li>‌**‌弹性布局（Flex）**‌：专为布局设计的CSS模块，能够让容器空间的分配和子元素的排列更加简便和高效。</li><li>‌**‌网格布局（Grid）**‌：提供一个强大的二维布局系统，可以同时控制行和列的布局。</li></ul><h3 id="媒体查询" tabindex="-1">媒体查询 <a class="header-anchor" href="#媒体查询" aria-label="Permalink to &quot;媒体查询&quot;">​</a></h3><p><code>@media screen</code> 屏幕尺寸</p><ul><li>width：viewport的宽度</li><li>height：viewport的高度</li><li>aspect-ratio：viewport的宽高比</li><li>orientation：viewport的旋转方向</li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 宽度小于 700px  */</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">@media</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> screen</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> and</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">max-width</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">699</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  .box</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    background-color</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">green</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 宽度介于 700px - 1200px  */</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">@media</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> screen</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> and</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">min-width</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">700</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">and</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">max-width</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">1200</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  .box</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    background-color</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 宽度大于 1200px  */</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">@media</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> screen</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> and</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">min-width</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">1201</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  .box</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    background-color</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">blue</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="弹性布局-flex" tabindex="-1">弹性布局 Flex <a class="header-anchor" href="#弹性布局-flex" aria-label="Permalink to &quot;弹性布局 Flex&quot;">​</a></h3><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">display: flex;</span></span></code></pre></div><h4 id="容器属性" tabindex="-1">容器属性 <a class="header-anchor" href="#容器属性" aria-label="Permalink to &quot;容器属性&quot;">​</a></h4><p>以下 6 个属性设置在容器上：</p><ul><li>flex-direction：决定主轴的方向。 <ul><li>row（默认值）：主轴为水平方向，起点在左端。</li><li>column：主轴为垂直方向，起点在上沿。</li></ul></li><li>flex-wrap：如果一条轴线排不下，如何换行。 <ul><li>nowrap（默认）：不换行。</li><li>wrap：换行，第一行在上方。</li></ul></li><li>flex-flow：flex-direction 属性和 flex-wrap 属性的简写属性。</li><li>justify-content：定义项目在主轴上的对齐方式。 <ul><li>flex-start（默认值）：左对齐</li><li>flex-end：右对齐</li><li>center： 居中</li><li>space-between：两端对齐，项目之间的间隔都相等。</li><li>space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。</li><li>space-evenly：项目与项目之间，项目与边框之间的间隔都相等。</li></ul></li><li>align-items：定义项目在交叉轴上的对齐方式。</li><li>align-content：定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。</li></ul><h4 id="item属性" tabindex="-1">item属性 <a class="header-anchor" href="#item属性" aria-label="Permalink to &quot;item属性&quot;">​</a></h4><p>以下6个属性设置在项目上。</p><ul><li>order：定义项目的排列顺序。数值越小，排列越靠前，默认为 0。</li><li>flex-grow：定义项目的 <strong>放大比例</strong>，默认为 0，即如果存在剩余空间，也不放大。</li><li>flex-shrink：定义了项目的 <strong>缩小比例</strong>，默认为 1，即如果空间不足，该项目将缩小。</li><li>flex-basis：定义了在分配多余空间之前，项目占据的主轴空间（main size）。它的默认值为 auto，即项目的本来大小。</li><li>flex： flex-grow 、 flex-shrink 和 flex-basis 的简写，默认值为 0 1 auto 。后两个属性可选。</li><li>align-self：允许单个项目有与其他项目不一样的对齐方式，可覆盖 align-items 属性。默认值为 auto 。</li></ul><h3 id="网格布局-grid" tabindex="-1">网格布局 Grid <a class="header-anchor" href="#网格布局-grid" aria-label="Permalink to &quot;网格布局 Grid&quot;">​</a></h3><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">display: grid;</span></span></code></pre></div><h4 id="容器属性-1" tabindex="-1">容器属性 <a class="header-anchor" href="#容器属性-1" aria-label="Permalink to &quot;容器属性&quot;">​</a></h4><ul><li><p>grid-gap：单元格的间距</p><ul><li><code>grid-gap: 10px;</code></li></ul></li><li><p>grid-template-columns：定义列的宽度</p><ul><li><code>grid-template-columns: repeat(5, 1fr);</code> 每行 5 列，宽度自适应</li></ul></li><li><p>grid-template-rows：定义行的高度 【显式单元格】</p><ul><li><code>grid-template-rows: 100px;</code> 定义一行的高度</li></ul></li><li><p>grid-auto-rows：定义行的高度【隐式单元格】</p><ul><li><code>grid-auto-rows: 100px;</code> 不在布局中的，为隐式单元格。多行的 Grid，第一行是显式单元格，其他行是隐式单元格</li></ul></li><li><p>grid-template-areas：定义区域</p></li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">  grid-template-areas</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    &#39;</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">A</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;"> A</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> B&#39;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    &#39;C D B&#39;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    &#39;C E E&#39;;</span></span></code></pre></div><h4 id="item属性-1" tabindex="-1">item属性 <a class="header-anchor" href="#item属性-1" aria-label="Permalink to &quot;item属性&quot;">​</a></h4><ul><li><p>合并单元格</p><ul><li><code>grid-column: 1 / 3;</code> 列的起始位置，基于轴线</li><li><code>grid-row: 1 / 3;</code> 行的起始位置</li></ul></li><li><p>指定自己的区域</p><ul><li><code>grid-area: A;</code> 与 grid-template-areas 里对应的区域</li></ul></li></ul><h3 id="相对单位" tabindex="-1">相对单位 <a class="header-anchor" href="#相对单位" aria-label="Permalink to &quot;相对单位&quot;">​</a></h3><p><strong>rem / em</strong></p><ul><li><p>rem：相对于根元素（即html元素）的字体大小。</p></li><li><p>em：相对于当前元素的字体大小。</p><blockquote><p>如果当前元素没有设置字体大小，则取父元素的字体大小。</p></blockquote></li></ul><p><strong>vw / vh</strong></p><ul><li><p>vw：视口宽度的百分比。</p></li><li><p>vh：视口高度的百分比。</p></li></ul><p><strong>vmin / vmax</strong></p><ul><li><p>vmin：视口宽度和高度中较小的那个的百分比。</p></li><li><p>vmax：视口宽度和高度中较大的那个的百分比。</p></li></ul><p><strong>%</strong></p><ul><li>%：相对于父元素的百分比</li></ul><h3 id="动态字体大小" tabindex="-1">动态字体大小 <a class="header-anchor" href="#动态字体大小" aria-label="Permalink to &quot;动态字体大小&quot;">​</a></h3><p>根据屏幕的尺寸，在根节点上设置不同的字体大小。</p><p>其他地方使用 rem，设置相对的字体大小【相对于根节点的字体大小】</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">@media</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> screen</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> and</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">min-width</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">700</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">  html</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    font-size</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">14</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">@media</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> screen</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> and</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">min-width</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">960</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">  html</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    font-size</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">18</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">  font-size</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/** 实际的值为：2 * 14px = 28px */</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">  background-color</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="_2、css-变量" tabindex="-1">2、CSS 变量 <a class="header-anchor" href="#_2、css-变量" aria-label="Permalink to &quot;2、CSS 变量&quot;">​</a></h2><p>CSS 变量可以继承，把变量定义在 <strong>:root</strong> 或 html 上，则页面内所有的元素都可以使用这些变量</p><p><strong>主题切换</strong>，可以通过CSS 变量来实现</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/** 定义变量：--变量名 */</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">--text-color: </span><span style="--shiki-light:#FDAEB7;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#fff;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/** 使用变量：var函数 */</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">color: var(--text-color);</span></span></code></pre></div><p>在 js 里定义 CSS 变量</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">div.style.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">setProperty</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;--text-color&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;#fff&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="_3、css-动画" tabindex="-1">3、CSS 动画 <a class="header-anchor" href="#_3、css-动画" aria-label="Permalink to &quot;3、CSS 动画&quot;">​</a></h2><h3 id="过渡动画-transition" tabindex="-1">过渡动画 transition <a class="header-anchor" href="#过渡动画-transition" aria-label="Permalink to &quot;过渡动画 transition&quot;">​</a></h3><p>使用过渡动画的元素，需要设置过渡时间。在鼠标悬浮时，修改样式的值，来实现动画效果。</p><ul><li>transition：过渡时间</li><li>transform：变形 <ul><li>scale：缩放</li><li>rotate：旋转</li><li>translate：平移</li><li>perspective：3D景深</li></ul></li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.box</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">  transition</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">s</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  &amp;:hover {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    transform: </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">scale</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">1.2</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="关键帧-keyframes" tabindex="-1">关键帧 @keyframes <a class="header-anchor" href="#关键帧-keyframes" aria-label="Permalink to &quot;关键帧 @keyframes&quot;">​</a></h3><ul><li>@keyframes 创建关键帧</li><li>animation 使用动画 <ul><li>animation-name：引用 @keyframes 的动画名称</li><li>animation-duration：一个动画周期的时间，比如 2s</li><li>animation-timing-function：动画曲线，属性值有：<code>linear</code> 、<code>ease</code>（默认值）、<code>ease-in</code> 、<code>ease-out</code> 和 <code>ease-in-out</code></li><li>animation-iteration-count：动画播放次数，属性值可以为正整数或<code>infinite</code>（循环无限播放），默认为1，表示动画只执行一次。</li><li>animation-direction：动画方向，属性值有：<code>normal</code>（默认值）、alternate 正反交替、reverse 反向执行</li></ul></li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/** 1、基本设置 */</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">@keyframes</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> fadeIn</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  from</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">opacity</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">; }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  to</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">opacity</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">; }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.element</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">  animation</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: fadeIn </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">s</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> ease-in-out</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/** 2-1、设置多个时间点 */</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">@keyframes</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;"> slideIn</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  0%</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">transform</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">translateX</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">-100</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">); }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  50%</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">transform</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">translateX</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">); }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  100%</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">transform</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">translateX</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">); }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/** 2-2、正反交替、无限循环的动画 */</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">.slide-in</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">  animation</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: slideIn </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">s</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> infinite</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> alternate</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> ease-in-out</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="_4、css-权重" tabindex="-1">4、CSS 权重 <a class="header-anchor" href="#_4、css-权重" aria-label="Permalink to &quot;4、CSS 权重&quot;">​</a></h2><h3 id="selector-specificity-a-b-c" tabindex="-1">Selector Specificity (a, b, c) <a class="header-anchor" href="#selector-specificity-a-b-c" aria-label="Permalink to &quot;Selector Specificity (a, b, c)&quot;">​</a></h3><p><strong>a)</strong> ID 选择器</p><table tabindex="0"><thead><tr><th>ID 选择器</th><th>如： #app，权重为 (1, 0, 0)</th></tr></thead></table><p><strong>b)</strong> class选择器、属性选择器、伪类</p><table tabindex="0"><thead><tr><th>class选择器</th><th>如： .logo，权重为 (0, 1, 0)</th></tr></thead><tbody><tr><td>属性选择器</td><td>如： [type=&quot;text&quot;]</td></tr><tr><td>伪类</td><td>如： :hover</td></tr></tbody></table><p><strong>c)</strong> 标签选择器、伪元素</p><table tabindex="0"><thead><tr><th>标签选择器</th><th>如： div， 权重为 (0, 0, 1)</th></tr></thead><tbody><tr><td>伪元素</td><td>如： ::before 、::root</td></tr></tbody></table><p><strong>!important</strong>，加在样式属性值后，覆盖属性的其他值</p><p><strong>行内样式</strong>，写在元素的 style 属性上，权重 大于 选择器</p><p>单个选择器的 Specificity 按照 <strong>行内样式 &gt; id选择器 &gt; class选择器、属性选择器、伪类 &gt; 元素选择器、伪元素</strong> 的规律排序。 如果遇到组合选择器，则按其逻辑将其拆分为单个选择器后 <strong>相加</strong> 再进行判断。 如果选择器里包含了 <strong>!important</strong>，当选择器的权重 &gt;= 其他选择器的权重时，会覆盖加了 !important 的属性 如果权重相等，则后面的样式会覆盖前面的样式</p><p>组合选择器，如：子选择器（&gt;）、相邻选择器（+）、兄弟选择器（~），及 通用选择器（*），权重为 0</p><h2 id="_5、图片" tabindex="-1">5、图片 <a class="header-anchor" href="#_5、图片" aria-label="Permalink to &quot;5、图片&quot;">​</a></h2><h3 id="object-fit" tabindex="-1">object-fit <a class="header-anchor" href="#object-fit" aria-label="Permalink to &quot;object-fit&quot;">​</a></h3><h3 id="背景图片" tabindex="-1">背景图片 <a class="header-anchor" href="#背景图片" aria-label="Permalink to &quot;背景图片&quot;">​</a></h3><h3 id="clip-path" tabindex="-1">clip-path <a class="header-anchor" href="#clip-path" aria-label="Permalink to &quot;clip-path&quot;">​</a></h3><h2 id="_6、其他" tabindex="-1">6、其他 <a class="header-anchor" href="#_6、其他" aria-label="Permalink to &quot;6、其他&quot;">​</a></h2><h3 id="定位" tabindex="-1">定位 <a class="header-anchor" href="#定位" aria-label="Permalink to &quot;定位&quot;">​</a></h3><h3 id="阴影" tabindex="-1">阴影 <a class="header-anchor" href="#阴影" aria-label="Permalink to &quot;阴影&quot;">​</a></h3><h3 id="文本溢出" tabindex="-1">文本溢出 <a class="header-anchor" href="#文本溢出" aria-label="Permalink to &quot;文本溢出&quot;">​</a></h3><h3 id="box-sizing" tabindex="-1">box-sizing <a class="header-anchor" href="#box-sizing" aria-label="Permalink to &quot;box-sizing&quot;">​</a></h3><h3 id="filter" tabindex="-1">filter <a class="header-anchor" href="#filter" aria-label="Permalink to &quot;filter&quot;">​</a></h3><h2 id="_7、less" tabindex="-1">7、Less <a class="header-anchor" href="#_7、less" aria-label="Permalink to &quot;7、Less&quot;">​</a></h2><h2 id="_8、sass" tabindex="-1">8、Sass <a class="header-anchor" href="#_8、sass" aria-label="Permalink to &quot;8、Sass&quot;">​</a></h2>`,75)]))}const c=i(t,[["render",h]]);export{o as __pageData,c as default};
