import{_ as a,c as i,a2 as n,o as t}from"./chunks/framework.QcI9UzYB.js";const o=JSON.parse('{"title":"Taro 基础","description":"","frontmatter":{},"headers":[],"relativePath":"mobile/taro/Taro基础.md","filePath":"mobile/taro/Taro基础.md"}'),e={name:"mobile/taro/Taro基础.md"};function p(l,s,h,d,k,E){return t(),i("div",null,s[0]||(s[0]=[n(`<h1 id="taro-基础" tabindex="-1">Taro 基础 <a class="header-anchor" href="#taro-基础" aria-label="Permalink to &quot;Taro 基础&quot;">​</a></h1><h2 id="项目初始化" tabindex="-1">项目初始化 <a class="header-anchor" href="#项目初始化" aria-label="Permalink to &quot;项目初始化&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> @tarojs/cli</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> 项目名称</span></span></code></pre></div><h3 id="目录结构" tabindex="-1">目录结构 <a class="header-anchor" href="#目录结构" aria-label="Permalink to &quot;目录结构&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span>├── config                项目编译配置目录</span></span>
<span class="line"><span>|   └── index.ts          配置路径别名@ alias 【相当于 vite.config.ts】</span></span>
<span class="line"><span>├── src</span></span>
<span class="line"><span>|   ├── pages</span></span>
<span class="line"><span>|   |   └── index</span></span>
<span class="line"><span>|   ├── app.ts            项目入口文件</span></span>
<span class="line"><span>|   ├── app.scss      </span></span>
<span class="line"><span>|   └── app.config.ts      项目入口配置  【相当于 pages.json】</span></span>
<span class="line"><span>├── package.json</span></span>
<span class="line"><span>├── project.config.json   微信小程序项目配置 project.config.json ，配置 appid</span></span>
<span class="line"><span>└── tsconfig.json</span></span></code></pre></div><h4 id="配置路径别名" tabindex="-1">配置路径别名@ <a class="header-anchor" href="#配置路径别名" aria-label="Permalink to &quot;配置路径别名@&quot;">​</a></h4><p>config / index.ts</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">alias</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">  &#39;@&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: path.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">resolve</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;./src&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">  &#39;@/types&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: path.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">resolve</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;./types&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">},</span></span></code></pre></div><p>tsconfig.json</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">  &quot;compilerOptions&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">    &quot;paths&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">      &quot;@/*&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;./src/*&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">      &quot;@/types/*&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;./types/*&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="快速创建新页面" tabindex="-1">快速创建新页面 <a class="header-anchor" href="#快速创建新页面" aria-label="Permalink to &quot;快速创建新页面&quot;">​</a></h3><p>使用如下命令，快速创建新页面</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span>taro create --name [页面名称]</span></span></code></pre></div><h2 id="核心功能" tabindex="-1">核心功能 <a class="header-anchor" href="#核心功能" aria-label="Permalink to &quot;核心功能&quot;">​</a></h2><h3 id="生命周期" tabindex="-1">生命周期 <a class="header-anchor" href="#生命周期" aria-label="Permalink to &quot;生命周期&quot;">​</a></h3><table tabindex="0"><thead><tr><th></th><th>生命周期</th><th>Taro</th></tr></thead><tbody><tr><td>应用生命周期</td><td>onLaunch: 在应用程序第一次启动时触发</td><td>useLaunch</td></tr><tr><td></td><td>onError: 应用程序发生错误时触发</td><td>useError</td></tr><tr><td>页面生命周期</td><td>onLoad: 页面被加载，可以进行数据初始化</td><td>useLoad</td></tr><tr><td></td><td>onReady: 页面加载完毕，可以访问DOM</td><td>useReady</td></tr><tr><td></td><td>onShow: 页面被展示时触发</td><td>useDidShow</td></tr><tr><td></td><td>onHide: 页面被隐藏时触发</td><td>useDidHide</td></tr><tr><td></td><td>onUnload: 页面被销毁时触发</td><td>useUnload</td></tr></tbody></table><h3 id="自定义导航栏" tabindex="-1">自定义导航栏 <a class="header-anchor" href="#自定义导航栏" aria-label="Permalink to &quot;自定义导航栏&quot;">​</a></h3><h4 id="安全区域" tabindex="-1">安全区域 <a class="header-anchor" href="#安全区域" aria-label="Permalink to &quot;安全区域&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">safeArea</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> Taro.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">getSystemInfoSync</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">View</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> style</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">{{ paddingTop: safeArea?.top </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> &#39;px&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}}&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">View</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to &quot;&quot;">​</a></h3>`,20)]))}const c=a(e,[["render",p]]);export{o as __pageData,c as default};
