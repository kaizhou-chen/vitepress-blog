import{_ as i,c as a,a2 as n,o as h}from"./chunks/framework.QcI9UzYB.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"javascript/JavaScript笔记/02.工具方法/遍历树节点.md","filePath":"javascript/JavaScript笔记/02.工具方法/遍历树节点.md"}'),k={name:"javascript/JavaScript笔记/02.工具方法/遍历树节点.md"};function l(p,s,t,E,e,r){return h(),a("div",null,s[0]||(s[0]=[n(`<h2 id="树结构" tabindex="-1">树结构 <a class="header-anchor" href="#树结构" aria-label="Permalink to &quot;树结构&quot;">​</a></h2><h3 id="查找节点" tabindex="-1">查找节点 <a class="header-anchor" href="#查找节点" aria-label="Permalink to &quot;查找节点&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * element 根节点</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * value 要匹配的值</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * field 要查找的字段</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> searchTree</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">element</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">value</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">field</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> (element[field </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> &#39;id&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> value) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> element;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> (element.children </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> result </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">; result </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> &amp;&amp;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> element.children.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">; i</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      result </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> searchTree</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(element.children[i], value, field);</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> result;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="在数组里查找节点" tabindex="-1">在数组里查找节点 <a class="header-anchor" href="#在数组里查找节点" aria-label="Permalink to &quot;在数组里查找节点&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> searchTreeList</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">list</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">value</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">field</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  for</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> item</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> of</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> list) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> result </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> searchTree</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(item, value, field);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> (result) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">      return</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> result</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="遍历节点" tabindex="-1">遍历节点 <a class="header-anchor" href="#遍历节点" aria-label="Permalink to &quot;遍历节点&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * current 根节点</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * callback 回调函数，参数是：当前节点</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> traverse</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">current</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">callback</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">    callback</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(current)</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> (current.children) {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      current.children.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">forEach</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">child</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">        callback</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(child)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">        traverse</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(child, callback);</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      });</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="查找节点的层级结构" tabindex="-1">查找节点的层级结构 <a class="header-anchor" href="#查找节点的层级结构" aria-label="Permalink to &quot;查找节点的层级结构&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 查找节点的层级结构</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> tree</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> {Array} 树数据</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> func</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> {Function} 回调函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> key</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">{String} 指定返回字段名称</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> path</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> {Array} 路径数据</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">@returns</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> {*[]|[]|*}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> findPath</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">tree</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">func</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">key</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> &quot;&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">path</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> []) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">tree) </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> []</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  for</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> data</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> of</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> tree) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // @ts-ignore</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    key</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> &quot;&quot;</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> ?</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> path.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">push</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(data) </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> path.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">push</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(data[key]);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">func</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(data)) </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> path</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> (data.children </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> data.children.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">      const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> findChildren</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> findPath</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(data.children, func, key, path)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">      if</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> (findChildren.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> findChildren</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    path.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">pop</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> []</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>调用</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> path </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> findPath</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(list, </span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> data.value </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> &#39;wangfujing&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;label&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(path) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 打印返回数据 [&quot;北京&quot;,&quot;王府井&quot;]</span></span></code></pre></div><p>假设数据为</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> list</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  {</span></span>
<span class="line"><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">    &quot;value&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;beijing&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">    &quot;label&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;北京&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">    &quot;children&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">        &quot;value&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;gugong&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">        &quot;label&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;故宫&quot;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">        &quot;value&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;tiantan&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">        &quot;label&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;天坛&quot;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">        &quot;value&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;wangfujing&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">        &quot;label&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;王府井&quot;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><h3 id="根据关键字过滤" tabindex="-1">根据关键字过滤 <a class="header-anchor" href="#根据关键字过滤" aria-label="Permalink to &quot;根据关键字过滤&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> filterTree</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">array</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">text</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> getNodes</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">result</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">object</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> (object.text </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> text) {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">            result.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">push</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(object);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">            return</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> result;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> (Array.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">isArray</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(object.nodes)) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">            const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> nodes</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> object.nodes.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">reduce</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(getNodes, []);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">            if</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> (nodes.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">) result.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">push</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">({ </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">object, nodes });</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> result;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> array.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">reduce</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(getNodes, []);</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,15)]))}const g=i(k,[["render",l]]);export{F as __pageData,g as default};
