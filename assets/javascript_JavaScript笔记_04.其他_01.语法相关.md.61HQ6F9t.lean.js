import{_ as i,c as a,a2 as n,o as h}from"./chunks/framework.QcI9UzYB.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"javascript/JavaScript笔记/04.其他/01.语法相关.md","filePath":"javascript/JavaScript笔记/04.其他/01.语法相关.md"}'),l={name:"javascript/JavaScript笔记/04.其他/01.语法相关.md"};function t(p,s,k,e,E,d){return h(),a("div",null,s[0]||(s[0]=[n(`<h2 id="es6" tabindex="-1">ES6 <a class="header-anchor" href="#es6" aria-label="Permalink to &quot;ES6&quot;">​</a></h2><h3 id="扩展运算符" tabindex="-1">扩展运算符 (...) <a class="header-anchor" href="#扩展运算符" aria-label="Permalink to &quot;扩展运算符 (...)&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 浅拷贝 */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 复制对象</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> newObj</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">obj };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 复制数组</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> newList</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">list ];</span></span></code></pre></div><h4 id="剩余运算符" tabindex="-1">剩余运算符 (...) <a class="header-anchor" href="#剩余运算符" aria-label="Permalink to &quot;剩余运算符 (...)&quot;">​</a></h4><p>获取可迭代对象的剩余属性</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 解构，取出 name 属性，并将其他属性放入 rest 对象</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">name</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">rest</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> obj;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 第一个参数是 title，剩余的参数放在 rest 数组里</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> foo</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">title</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">rest</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">) {}</span></span></code></pre></div><h3 id="可选链操作符" tabindex="-1">可选链操作符 (?.) <a class="header-anchor" href="#可选链操作符" aria-label="Permalink to &quot;可选链操作符 (?.)&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 在引用为空 (null 或者 undefined) 的情况下，不会引起错误</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> name </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> obj.foo?.name;</span></span></code></pre></div><h3 id="空值合并操作符" tabindex="-1">空值合并操作符 (??) <a class="header-anchor" href="#空值合并操作符" aria-label="Permalink to &quot;空值合并操作符 (??)&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 这是一个逻辑操作符，当左侧为 null 或者 undefined 时，返回右侧的值</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> name;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> food</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> name </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">??</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> &#39;default name&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="代码注释规范" tabindex="-1">代码注释规范 <a class="header-anchor" href="#代码注释规范" aria-label="Permalink to &quot;代码注释规范&quot;">​</a></h2><h3 id="常用注释" tabindex="-1">常用注释 <a class="header-anchor" href="#常用注释" aria-label="Permalink to &quot;常用注释&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 函数定义</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> {function}</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> func</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 防抖的目标函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> {number}</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> duration</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 函数执行前等待多长的事件</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">@return</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> {function}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 防抖函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> debounce</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">func</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">duration</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> 1000</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 为参数对象做详细说明</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> {object}</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> options</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 配置对象</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> {string}</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> options.url</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 请求地址</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> {&#39;GET&#39;|&#39;POST&#39;}</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> options.method</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 请求方法</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> request</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">options</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">@var</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> {object}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">@desc</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 变量定义</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">@property</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> {string}</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> a</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 属性a</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">@property</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> {string}</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> b</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 属性b</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> foo </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  a: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;a&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  b: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;b&#39;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">@constant</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> {string}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">@desc</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 常量定义</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> COLOR_WHITE</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> &#39;#fff&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">@enum</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> {number}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">@desc</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 枚举定义</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> RETCODE</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">@desc</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 未登录</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   */</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  NOT_LOGIN: </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">100000</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="数组" tabindex="-1">数组 <a class="header-anchor" href="#数组" aria-label="Permalink to &quot;数组&quot;">​</a></h2><h3 id="删除-splice" tabindex="-1">删除 splice <a class="header-anchor" href="#删除-splice" aria-label="Permalink to &quot;删除 splice&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 删除从下标 0 处开始的 1 个元素</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">arr.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">splice</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="截取-slice" tabindex="-1">截取 slice <a class="header-anchor" href="#截取-slice" aria-label="Permalink to &quot;截取 slice&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 截取数组，不修改原数组</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> subArray</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> arr.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">slice</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="插入" tabindex="-1">插入 <a class="header-anchor" href="#插入" aria-label="Permalink to &quot;插入&quot;">​</a></h3><h4 id="splice" tabindex="-1">splice <a class="header-anchor" href="#splice" aria-label="Permalink to &quot;splice&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span>// 在下标 2 处，(删除0个元素)，插入新的元素</span></span>
<span class="line"><span>arr.splice(2, 0, &#39;orange&#39;);</span></span></code></pre></div><h4 id="unshift" tabindex="-1">unshift <a class="header-anchor" href="#unshift" aria-label="Permalink to &quot;unshift&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 在数组的头部插入一个或多个元素</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">arr.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">unshift</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;apple&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="栈-pop" tabindex="-1">栈 pop <a class="header-anchor" href="#栈-pop" aria-label="Permalink to &quot;栈 pop&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 取出并删除最后一个元素，简单的栈</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> lastItem</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> arr.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">pop</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h3 id="队列-shift" tabindex="-1">队列 shift <a class="header-anchor" href="#队列-shift" aria-label="Permalink to &quot;队列 shift&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 取出并删除第一个元素，简单的队列</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> firstItem</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> arr.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">shift</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h3 id="包含-includes" tabindex="-1">包含 includes <a class="header-anchor" href="#包含-includes" aria-label="Permalink to &quot;包含 includes&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 数组是否包含给定的值</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">arr.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">includes</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="find" tabindex="-1">find <a class="header-anchor" href="#find" aria-label="Permalink to &quot;find&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 查找元素，完整的参数为 (item, index, array)</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">arr.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">find</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">item</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> item </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="findindex" tabindex="-1">findIndex <a class="header-anchor" href="#findindex" aria-label="Permalink to &quot;findIndex&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 查找元素的下标，完整的参数为 (item, index, array)</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">arr.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">findIndex</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">item</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> item </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="filter" tabindex="-1">filter <a class="header-anchor" href="#filter" aria-label="Permalink to &quot;filter&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 过滤元素，完整的参数为 (item, index, array)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> list</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> arr.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">filter</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">item</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> item </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="转换-map" tabindex="-1">转换 map <a class="header-anchor" href="#转换-map" aria-label="Permalink to &quot;转换 map&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 转换元素，完整的参数为 (item, index, array)</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">arr.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">map</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">item</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> item </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="汇总-reduce" tabindex="-1">汇总 reduce <a class="header-anchor" href="#汇总-reduce" aria-label="Permalink to &quot;汇总 reduce&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 将数组汇总为单个输出值</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">arr.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">reduce</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">total</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">item</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> total </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> item);</span></span></code></pre></div><p>也可以写为</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span>arr.reduce(</span></span>
<span class="line"><span>  (total, item) =&gt; total + item,</span></span>
<span class="line"><span>  0</span></span>
<span class="line"><span>);</span></span></code></pre></div><p>完整的参数定义</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">arr.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">reduce</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * accumulator：累加器，即上一次回调函数结果的值，初始化为 initialValue。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * currentValue：数组中当前被处理的元素。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * index：可选，当前元素在数组中的索引。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * array：可选，调用 reduce 方法的数组。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   */</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  (</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">accumulator</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">currentValue</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> accumulator </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> currentValue</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // initialValue：可选，如果没有提供初始值，则将数组中的第一个元素作为初始值，并从数组中的第二个元素开始执行。</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">  0</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="格式化" tabindex="-1">格式化 <a class="header-anchor" href="#格式化" aria-label="Permalink to &quot;格式化&quot;">​</a></h2><h3 id="数字格式化" tabindex="-1">数字格式化 <a class="header-anchor" href="#数字格式化" aria-label="Permalink to &quot;数字格式化&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> num</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> 12345.678</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// toFixed() 保留2位小数</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> formattedNum </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> num.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">toFixed</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Intl.NumberFormat 格式化 API，支持货币格式化、百分比格式化</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 带千分位分隔符，保留2位小数</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> formatter</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> Intl.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">NumberFormat</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;en-US&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  minimumFractionDigits: </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  maximumFractionDigits: </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> formattedNum2 </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> formatter.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">format</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(num);</span></span></code></pre></div>`,46)]))}const c=i(l,[["render",t]]);export{g as __pageData,c as default};
