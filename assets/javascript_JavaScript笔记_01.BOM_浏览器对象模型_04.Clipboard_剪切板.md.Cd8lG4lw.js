import{_ as i,c as a,a2 as n,o as t}from"./chunks/framework.QcI9UzYB.js";const o=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"javascript/JavaScript笔记/01.BOM_浏览器对象模型/04.Clipboard_剪切板.md","filePath":"javascript/JavaScript笔记/01.BOM_浏览器对象模型/04.Clipboard_剪切板.md"}'),l={name:"javascript/JavaScript笔记/01.BOM_浏览器对象模型/04.Clipboard_剪切板.md"};function p(h,s,E,e,k,r){return t(),a("div",null,s[0]||(s[0]=[n(`<h2 id="clipboard-api" tabindex="-1">Clipboard API <a class="header-anchor" href="#clipboard-api" aria-label="Permalink to &quot;Clipboard API&quot;">​</a></h2><ol><li>只有 <code>https</code> 协议的页面才能使用这个 API。不过，开发环境（localhost）允许使用非加密协议。</li><li>读取剪切板的时候，会有一个弹框，只有允许了，才可以读取</li></ol><h3 id="writetext" tabindex="-1">writeText <a class="header-anchor" href="#writetext" aria-label="Permalink to &quot;writeText&quot;">​</a></h3><p>向剪贴板写入文本</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">navigator.clipboard.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">writeText</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(text).</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  () </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;复制成功&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  }, </span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  () </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;复制失败&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="write" tabindex="-1">write <a class="header-anchor" href="#write" aria-label="Permalink to &quot;write&quot;">​</a></h3><p>向剪切板写入图片，只支持 png 图片</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> item</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> ClipboardItem</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">  &#39;image/png&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: file </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 图片文件</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">navigator.clipboard.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">write</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">([item]).</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;复制成功&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="readtext" tabindex="-1">readText <a class="header-anchor" href="#readtext" aria-label="Permalink to &quot;readText&quot;">​</a></h3><p>读取剪贴板的文本内容</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">navigator.clipboard.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">readText</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">clipText</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 文本内容</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(clipText)</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div>`,11)]))}const g=i(l,[["render",p]]);export{o as __pageData,g as default};
