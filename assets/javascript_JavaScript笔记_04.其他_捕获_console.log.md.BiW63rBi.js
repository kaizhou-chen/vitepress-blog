import{_ as i,c as a,a2 as n,o as l}from"./chunks/framework.QcI9UzYB.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"javascript/JavaScript笔记/04.其他/捕获_console.log.md","filePath":"javascript/JavaScript笔记/04.其他/捕获_console.log.md"}'),t={name:"javascript/JavaScript笔记/04.其他/捕获_console.log.md"};function p(e,s,h,k,o,r){return l(),a("div",null,s[0]||(s[0]=[n(`<h2 id="捕获-console-log" tabindex="-1">捕获 console.log <a class="header-anchor" href="#捕获-console-log" aria-label="Permalink to &quot;捕获 console.log&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> oldLog</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> console.log;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 修改 console.log</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 调用默认的打印</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  oldLog.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">apply</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(console, </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">arguments</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 捕获打印的内容</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> content</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">arguments</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div>`,2)]))}const d=i(t,[["render",p]]);export{c as __pageData,d as default};
