import{_ as i,c as a,a2 as n,o as E}from"./chunks/framework.QcI9UzYB.js";const t="/vitepress-blog/assets/props_camel.-iKqBKdQ.png",y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"vue/Vue2/2.Vue_2_基础/02.组件基础.md","filePath":"vue/Vue2/2.Vue_2_基础/02.组件基础.md"}'),l={name:"vue/Vue2/2.Vue_2_基础/02.组件基础.md"};function h(p,s,k,e,d,r){return E(),a("div",null,s[0]||(s[0]=[n(`<h2 id="生命周期" tabindex="-1">生命周期 <a class="header-anchor" href="#生命周期" aria-label="Permalink to &quot;生命周期&quot;">​</a></h2><table tabindex="0"><thead><tr><th>生命周期</th><th></th></tr></thead><tbody><tr><td>created</td><td>beforeCreate</td></tr><tr><td>mounted</td><td>beforeMount</td></tr><tr><td>updated</td><td>beforeUpdate</td></tr><tr><td>destoryed</td><td>beforeDestory</td></tr><tr><td>activated</td><td>deactivated</td></tr></tbody></table><p><strong>updated</strong></p><p>只有 data 里的变量改变，并且要在页面重新渲染完成之后，才会进 updated 生命周期。 <em>只改变 data 里的值，但是没有在页面上渲染该值的话并不会触发 updated</em></p><br><p>以如下代码为例，data 里定义了 text，且 text 的值需要渲染到页面上。当 text 的值发生变化时，就会进入 updated</p><p>如果去掉 div 标签，页面不渲染 text ，则无论 text 如何变化，都不会进入 updated</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;{{ text }}&lt;/</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  data</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      text: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;未更新&#39;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="slot-插槽" tabindex="-1">slot 插槽 <a class="header-anchor" href="#slot-插槽" aria-label="Permalink to &quot;slot 插槽&quot;">​</a></h2><p><a href="https://cn.vuejs.org/v2/guide/components-slots.html" target="_blank" rel="noreferrer">官方文档</a>，<strong>Vue 实现了一套内容分发的 API，将 <code>&lt;slot&gt;</code> 元素作为承载分发内容的出口。</strong></p><p>当父组件需要向子组件内插入一些内容时，由 slot 分发负责这些内容在哪里显示。</p><br><p>比如子组件有2个具名插槽 <code>header</code> <code>footer</code></p><p>在父组件上使用 <code>slot=&quot;header&quot;</code> 就可以将相应的内容插入到子组件的 <code>&lt;slot name=&quot;header&quot;&gt;&lt;/slot&gt;</code> 插槽上</p><p>2.6.0 版本之后的新语法可以将 <code>slot=&quot;header&quot;</code> 写作 <code>#header</code></p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 父组件</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">v-child</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">          &lt;</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;hello&lt;/</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">          </span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">          &lt;!-- </span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">            2.6.0 之前版本的写法</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">            slot        插槽名称</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">            slot-scope  插槽作用于，可以获取到子组件插槽上绑定的属性</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">                        子组件的插槽上绑定了属性 text，通过 slot-scope 可以获取到 text</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">          --&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">          &lt;</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">h3</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> slot</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;header&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;header&lt;/</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">h3</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">          &lt;</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">h3</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> slot</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;footer&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> slot-scope</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;scope&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;footer {{ scope.text }}&lt;/</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">h3</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">          </span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">          &lt;!-- </span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">            2.6.0 新版本的写法</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">            #插槽名称</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">            #插槽名称 = &quot;scope&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">            v-slot=&quot;scope&quot;  向默认插槽传递作用于时，由于默认插槽没有名称，可以使用 v-slot </span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">          --&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">          &lt;</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">h3</span><span style="--shiki-light:#FDAEB7;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> #header&gt;header&lt;/h3&gt;</span></span>
<span class="line"><span style="--shiki-light:#FDAEB7;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">          &lt;h3</span><span style="--shiki-light:#FDAEB7;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> #footer=&quot;scope&quot;&gt;footer</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {{ scope.text }}</span><span style="--shiki-light:#FDAEB7;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">&lt;/h3&gt;</span></span>
<span class="line"><span style="--shiki-light:#FDAEB7;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">          &lt;h3</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> v-slot</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">footer</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;scope&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;footer {{ scope.text }}&lt;/</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">h3</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      &lt;/</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">v-child</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子组件</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">h3</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;我是子组件&lt;/</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">h3</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">slot</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;header&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;父组件中没header的时候会显示&lt;/</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">slot</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">            &lt;!-- 插槽 footer 上绑定了属性 text，可以提供给父组件使用 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">slot</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;footer&quot;</span><span style="--shiki-light:#FDAEB7;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> :text=&quot;text&quot;&gt;父组件中没footer的时候会显示&lt;/slot&gt;</span></span>
<span class="line"><span style="--shiki-light:#FDAEB7;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        &lt;/p&gt;</span></span>
<span class="line"><span style="--shiki-light:#FDAEB7;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    &lt;/div&gt;</span></span>
<span class="line"><span style="--shiki-light:#FDAEB7;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">&lt;/template&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FDAEB7;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">&lt;script&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">export</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> default</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  data</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    return {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">      text</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;zzz&#39;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#FDAEB7;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">&lt;/script&gt;</span></span></code></pre></div><h2 id="动态组件" tabindex="-1">动态组件 <a class="header-anchor" href="#动态组件" aria-label="Permalink to &quot;动态组件&quot;">​</a></h2><p>需要动态显示多层级菜单时，可以自己封装一个递归组件来实现，即：在这个组件中使用自己</p><br><p>TreeMenu.vue (子组件)</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- 使用 is 可以动态修改组件的类型 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> :is</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;type&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> :index</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;index&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> slot</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;title&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;{{ item.text }}&lt;/</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> v-for</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;(obj, index) in item.children&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      &lt;!-- 递归组件，使用自己 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">ux-tree-menu</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> :item</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;obj&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> :key</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;index&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">ux-tree-menu</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  name: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;ux-tree-menu&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 在递归组件、keep-alive等场景下需要使用 name</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  props: {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    item: Object</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  data</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      type: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      index: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;&#39;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  created</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 有子菜单就用 el-submenu，没有就用 el-menu-item</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">.type </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">.item.children </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> &#39;el-submenu&#39;</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> &#39;el-menu-item&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">.index </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">.item.url </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">.item.url </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">.item.text;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><br><p>父组件</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">el-menu</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> :default-active</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;$route.path&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> router</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> v-for</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;(item, index) in menu&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">ux-tree-menu</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> :item</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;item&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> :key</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;index&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">ux-tree-menu</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">el-menu</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> TreeMenu </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> &#39;@/components/TreeMenu.vue&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  components: {</span></span>
<span class="line"><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">    &#39;ux-tree-menu&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: TreeMenu</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  data</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      menu: [</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">        {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">          text: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;首页&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">          url: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;/&#39;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">        },</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">        {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">          text: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;入门 Demo&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">          children: [</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">            {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">              text: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;Vue 入门&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">              url: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;/demo/intro&#39;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">            },</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">            {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">              text: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;Vuex 入门&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">              url: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;/demo/vuex&#39;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">          ]</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      ]</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="透传属性" tabindex="-1">透传属性 <a class="header-anchor" href="#透传属性" aria-label="Permalink to &quot;透传属性&quot;">​</a></h3><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#FDAEB7;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">child</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> v-bind</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;$attrs&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> v-on</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;$listener&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#FDAEB7;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">child</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="nexttick" tabindex="-1">$nextTick <a class="header-anchor" href="#nexttick" aria-label="Permalink to &quot;$nextTick&quot;">​</a></h2><p>Vue 在<strong>更新 DOM 时</strong>是异步执行的。</p><p>只要侦听到数据变化，Vue 将开启一个队列，并缓冲在同一事件循环中发生的所有数据变更。</p><p>如果同一个 watcher 被多次触发，只会被推入到队列中一次。</p><p>在下一个的事件循环“tick”中，Vue 刷新队列并执行实际 (已去重的) 工作。</p><div class="language-mermaid vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">graph LR</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  a(&quot;数据变化&quot;)</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  a1(&quot;数据变化&quot;)</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  a2(&quot;数据变化&quot;)</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  b(&quot;DOM更新&quot;)</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  c(&quot;调用nextTick&quot;)</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  a --&gt; b</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  b --&gt; c</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  subgraph 异步队列</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    a2 --&gt; a1</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    a1 --&gt; a</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  end</span></span></code></pre></div><p><a href="https://cn.vuejs.org/v2/api/index.html#vm-nextTick" target="_blank" rel="noreferrer">官方文档</a>，<strong>this.$nextTick() 将回调延迟到下次 DOM 更新循环之后执行。在修改数据之后立即使用它，然后等待 DOM 更新。</strong></p><p><em>注：类似于 React 里的 <code>this.setState({}, () =&gt; { ... })</code> ，更新 state 里的数据，在 DOM 更新完毕后，执行自己的回调</em></p><br><p>Vue 在更新 DOM 时是异步执行的：</p><p>也就是说数据变化后，DOM 不会马上更新，根据数据更新 DOM 的事件被放入<span style="color:red;">异步队列</span>/中</p><p>并且会进行 <span style="color:red;font-weight:bold;">去重</span> 处理，对同一个 DOM 节点的多次更新，会被去重，只执行一次</p><p>在这个更新 DOM 的队列结束后，就会调用 nextTick</p><br><p>例如：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> @click</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;updateMessage&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;{{ message }}&lt;/</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  data</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      message: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;未更新&#39;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  methods: {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">    updateMessage</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">      this</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">.message </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> &#39;已更新&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      console.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">.$el.textContent) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// =&gt; &#39;未更新&#39;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      </span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">      this</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">$nextTick</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">        console.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">.$el.textContent) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// =&gt; &#39;已更新&#39;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      })</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="事件循环" tabindex="-1">事件循环 <a class="header-anchor" href="#事件循环" aria-label="Permalink to &quot;事件循环&quot;">​</a></h3><p>运行机制：</p><ol><li>所有同步任务都在主线程上执行，形成一个 <strong>执行栈</strong>（Execution Context Stack）</li><li>主线程之外，还存在一个 <strong>任务队列</strong>（Task Queue）。只要异步任务有了运行结果，就在 <strong>任务队列</strong> 之中放置一个事件</li><li>一旦 <strong>执行栈</strong> 中的所有同步任务执行完毕，系统就会读取 <strong>任务队列</strong>，看看里面有哪些待执行事件。那些对应的异步任务，于是结束等待状态，进入执行栈，开始执行</li><li>主线程不断重复上面的第三步</li></ol><h2 id="组件通信" tabindex="-1">组件通信 <a class="header-anchor" href="#组件通信" aria-label="Permalink to &quot;组件通信&quot;">​</a></h2><h3 id="父子组件通信" tabindex="-1">父子组件通信 <a class="header-anchor" href="#父子组件通信" aria-label="Permalink to &quot;父子组件通信&quot;">​</a></h3><p><code>props / $emit</code></p><h3 id="兄弟组件通信-eventbus" tabindex="-1">兄弟组件通信 eventBus <a class="header-anchor" href="#兄弟组件通信-eventbus" aria-label="Permalink to &quot;兄弟组件通信 eventBus&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> eventBus</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> Vue</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 触发事件</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">eventBus.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">$emit</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;eventName&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, param);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 监听事件</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">eventBus.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">$on</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;eventName&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">param</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="全局状态管理-vuex" tabindex="-1">全局状态管理 Vuex <a class="header-anchor" href="#全局状态管理-vuex" aria-label="Permalink to &quot;全局状态管理 Vuex&quot;">​</a></h3><p><code>Vuex</code></p><h3 id="与后代组件通信-provide-inject" tabindex="-1">与后代组件通信 provide / inject <a class="header-anchor" href="#与后代组件通信-provide-inject" aria-label="Permalink to &quot;与后代组件通信 provide / inject&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  data</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      name: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;小松菜奈&#39;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">     </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 在供给方组件内</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  provide</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      parentName: </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">.name</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 在注入方组件</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  inject</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;parentName&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="keep-alive-缓存组件" tabindex="-1"><code>&lt;keep-alive&gt;</code> 缓存组件 <a class="header-anchor" href="#keep-alive-缓存组件" aria-label="Permalink to &quot;\`&lt;keep-alive&gt;\` 缓存组件&quot;">​</a></h2><p><code>&lt;keep-alive&gt;</code> 包裹动态组件时，会缓存不活动的组件实例，而不是销毁它们。</p><p>当组件在 <code>&lt;keep-alive&gt;</code> 内被切换，它的 <code>activated</code> 和 <code>deactivated</code> 这两个生命周期钩子函数将会被对应执行。</p><h2 id="自定义指令" tabindex="-1">自定义指令 <a class="header-anchor" href="#自定义指令" aria-label="Permalink to &quot;自定义指令&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">V</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">Click</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">Outside</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">V</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">Clipboard</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">Vue</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">Lazyload</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">实现自定义的权限控制</span></span></code></pre></div><h2 id="props" tabindex="-1">props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;props&quot;">​</a></h2><blockquote><p>[!ATTENTION]</p><p>子组件定义 props 时使用驼峰命名，父组件的模板上向子组件传值时，要改成短横线命名方式，因为 HTML 不区分大小写</p></blockquote><p><img src="`+t+`" alt=""></p><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><p>如果子组件 watch props 监听不到，则参考如下代码，调整 watch 的写法</p></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">prop</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">    action</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">        type</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: String,</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">        default</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;Add&#39;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">watch</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">    action</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">        deep</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">        immediate</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">,    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 这句重要</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">        handler</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> (val) {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">            console.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;action Value:&#39;</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> val);</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="虚拟dom" tabindex="-1">虚拟DOM <a class="header-anchor" href="#虚拟dom" aria-label="Permalink to &quot;虚拟DOM&quot;">​</a></h2><p>虚拟 DOM <code>VNode</code></p>`,68)]))}const c=i(l,[["render",h]]);export{y as __pageData,c as default};
