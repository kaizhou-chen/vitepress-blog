import{_ as i}from"./chunks/nginx_config.BJVMlQWk.js";import{_ as a,c as n,a2 as l,o as t}from"./chunks/framework.QcI9UzYB.js";const e="/vitepress-blog/assets/base-path_index.html.C8-068FM.png",p="/vitepress-blog/assets/vite_multi_entry.Da38J-n8.png",F=JSON.parse('{"title":"打包部署","description":"","frontmatter":{},"headers":[],"relativePath":"vue/Vue3基础/4.其他/03.打包部署.md","filePath":"vue/Vue3基础/4.其他/03.打包部署.md"}'),h={name:"vue/Vue3基础/4.其他/03.打包部署.md"};function k(E,s,r,d,o,c){return t(),n("div",null,s[0]||(s[0]=[l('<h1 id="打包部署" tabindex="-1">打包部署 <a class="header-anchor" href="#打包部署" aria-label="Permalink to &quot;打包部署&quot;">​</a></h1><h2 id="静态资源" tabindex="-1">静态资源 <a class="header-anchor" href="#静态资源" aria-label="Permalink to &quot;静态资源&quot;">​</a></h2><ul><li><p>assets 目录，需要用相对路径来访问 <code>./相对路径</code> 或者 <code>@/相对路径</code></p><p>assets 目录下的文件，会被编译压缩，一般放全局的css文件、js文件，或代码相关的其他资源文件</p></li><li><p>public 目录，需要用绝对路径来访问 <code>/绝对路径</code></p><p>public 目录下的文件，会被原封不动的复制到 dist 目录下，一般用来放第三方库，或者图片</p></li></ul><h2 id="部署到二级目录" tabindex="-1">部署到二级目录 <a class="header-anchor" href="#部署到二级目录" aria-label="Permalink to &quot;部署到二级目录&quot;">​</a></h2><p>如果要部署在域名的子目录下，需要设置项目的 base</p><p>比如部署在 <a href="http://www.xx.com/myapp/" target="_blank" rel="noreferrer">http://www.xx.com/myapp/</a> ，则 base 为 /myapp/</p><p>具体配置参考 <a href="#_43-项目的-base">4.3 项目的 base</a></p><br><p>打包之后，检查 dist / index.html 里的 base 是不是 /myapp/</p><p><img src="'+e+'" alt=""></p><h2 id="多入口配置" tabindex="-1">多入口配置 <a class="header-anchor" href="#多入口配置" aria-label="Permalink to &quot;多入口配置&quot;">​</a></h2><h3 id="入口-html" tabindex="-1">入口 html <a class="header-anchor" href="#入口-html" aria-label="Permalink to &quot;入口 html&quot;">​</a></h3><p>在根目录新增入口 html，加载不同的 main.ts</p><p>如果把登录页面作为独立的入口，则访问 login.html</p><p><img src="'+p+`" alt=""></p><h3 id="vite-config-ts" tabindex="-1">vite.config.ts <a class="header-anchor" href="#vite-config-ts" aria-label="Permalink to &quot;vite.config.ts&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> { defineConfig } </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> &#39;vite&#39;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> vue </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> &#39;@vitejs/plugin-vue&#39;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> { resolve } </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> &#39;path&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  build: {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    rollupOptions: {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      input: {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">        main: </span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">resolve</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(__dirname, </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;index.html&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">        login: </span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">resolve</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(__dirname, </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;login.html&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="部署到-nginx" tabindex="-1">部署到 nginx <a class="header-anchor" href="#部署到-nginx" aria-label="Permalink to &quot;部署到 nginx&quot;">​</a></h2><ul><li><p>将打包后的 dist 文件夹，复制到 nginx 的 html 目录下</p></li><li><p>修改 conf / nginx.conf 配置文件</p><p>a) 添加如下配置，其中访问地址，与上面的项目名称对应 【try_files 配置，是为了避免路由出错】</p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> ^~</span><span style="--shiki-light:#DBEDFF;--shiki-dark:#DBEDFF;"> /vue3-guide </span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  alias </span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  html/vue3-guide/dist;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">  try_files </span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">$uri $uri/ /index.html </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">last</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><img src="`+i+'" alt=""></p></li><li><p>修改了nginx 的配置文件后，需要到 nginx 的目录，打开cmd，执行如下命令来让改动生效 <code>nginx -s reload</code></p></li></ul>',19)]))}const u=a(h,[["render",k]]);export{F as __pageData,u as default};
