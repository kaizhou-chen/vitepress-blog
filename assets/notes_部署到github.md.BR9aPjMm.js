import{_ as i,c as a,a2 as n,o as h}from"./chunks/framework.QcI9UzYB.js";const l="/vitepress-blog/assets/github_workflows.C9-TqA7b.png",p="/vitepress-blog/assets/github-gh-pages.BrCy7AGm.png",y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"notes/部署到github.md","filePath":"notes/部署到github.md"}'),t={name:"notes/部署到github.md"};function k(E,s,e,r,d,g){return h(),a("div",null,s[0]||(s[0]=[n('<h2 id="部署到-github" tabindex="-1">部署到 GitHub <a class="header-anchor" href="#部署到-github" aria-label="Permalink to &quot;部署到 GitHub&quot;">​</a></h2><p>使用 GitHub Actions 和 GitHub Pages 实现前端项目的自动构建与发布</p><p>GitHub Actions，自动打包部署</p><p>GitHub Pages，静态资源托管</p><h2 id="github-actions" tabindex="-1">GitHub Actions <a class="header-anchor" href="#github-actions" aria-label="Permalink to &quot;GitHub Actions&quot;">​</a></h2><h3 id="创建打包部署脚本" tabindex="-1">创建打包部署脚本 <a class="header-anchor" href="#创建打包部署脚本" aria-label="Permalink to &quot;创建打包部署脚本&quot;">​</a></h3><h4 id="deploy-yml" tabindex="-1">deploy.yml <a class="header-anchor" href="#deploy-yml" aria-label="Permalink to &quot;deploy.yml&quot;">​</a></h4><p>在项目的根目录，新建文件夹 <code>.github</code> 及子文件夹 <code>workflows</code></p><p>新建配置文件 <code>deploy.yml</code></p><p><img src="'+l+`" alt="github_workflows"></p><p><strong>deploy.yml</strong></p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">Build and Deploy</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">  push</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">    branches</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">main</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 推送到 main 分支时触发该命令</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">permissions</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">  contents</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">write</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 直接授权，不配置 GITHUB_TOKEN</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">jobs</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">  build-and-deploy</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">    runs-on</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">ubuntu-latest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">    steps</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">Checkout code</span></span>
<span class="line"><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">        uses</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">actions/checkout@v4</span></span>
<span class="line"><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">        with</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">          ref</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">main</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 拉取 main 分支代码</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">Setup Node.js and npm</span></span>
<span class="line"><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">        uses</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">actions/setup-node@v3</span></span>
<span class="line"><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">        with</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">          node-version</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;20.10.0&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 设置 nodejs 的版本</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">Install dependencies</span></span>
<span class="line"><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">        run</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">npm install</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 使用 npm 安装依赖</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">Build</span></span>
<span class="line"><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">        run</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">npm run build:github</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 执行打包命令</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">Deploy to GitHub Pages</span></span>
<span class="line"><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">        uses</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">JamesIves/github-pages-deploy-action@v4</span></span>
<span class="line"><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">        with</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;">          folder</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">dist</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 指定要部署的文件夹为 dist</span></span></code></pre></div><h3 id="gh-pages-分支" tabindex="-1">gh-pages 分支 <a class="header-anchor" href="#gh-pages-分支" aria-label="Permalink to &quot;gh-pages 分支&quot;">​</a></h3><p>提交到代码仓后，会自动创建 <code>gh-pages</code> 分支</p><h2 id="github-pages" tabindex="-1">GitHub Pages <a class="header-anchor" href="#github-pages" aria-label="Permalink to &quot;GitHub Pages&quot;">​</a></h2><p>选择 <code>gh-pages</code> 分支</p><p><img src="`+p+`" alt="github-pages"></p><h2 id="部署后的问题" tabindex="-1">部署后的问题 <a class="header-anchor" href="#部署后的问题" aria-label="Permalink to &quot;部署后的问题&quot;">​</a></h2><h3 id="问题一" tabindex="-1">问题一 <a class="header-anchor" href="#问题一" aria-label="Permalink to &quot;问题一&quot;">​</a></h3><p>部署到 github 后，下划线开头的一个文件<code>_plugin-vue_export-helper</code>访问不到</p><h4 id="解决办法" tabindex="-1">解决办法 <a class="header-anchor" href="#解决办法" aria-label="Permalink to &quot;解决办法&quot;">​</a></h4><p><strong>vite.config.js</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> { defineConfig } </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> &#39;vite&#39;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> vue </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> &#39;@vitejs/plugin-vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// eslint-disable-next-line no-control-regex</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> INVALID_CHAR_REGEX</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">[\\u0000-\\u001F&quot;#$&amp;*+,:;&lt;=&gt;?[</span><span style="--shiki-light:#85E89D;--shiki-dark:#85E89D;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">\\]</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">^\`{|}\\u007F]</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">g</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> DRIVE_LETTER_REGEX</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">^</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">[a-z]</span><span style="--shiki-light:#DBEDFF;--shiki-dark:#DBEDFF;">:</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">i</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  build: {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    rollupOptions: {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      output: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // https://github.com/rollup/rollup/blob/master/src/utils/sanitizeFileName.ts</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">        sanitizeFileName</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#FFAB70;">name</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">          const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> match</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> DRIVE_LETTER_REGEX</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">exec</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(name);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">          const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> driveLetter</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> match </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> match[</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> &quot;&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          // A \`:\` is only allowed as part of a windows drive letter (ex: C:\\foo)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          // Otherwise, avoid them because they can refer to NTFS alternate data streams.</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">          return</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">            driveLetter </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">+</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">            name.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">slice</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(driveLetter.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">replace</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">INVALID_CHAR_REGEX</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">          );</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">        },</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p>参考文档：</p><p><a href="https://blog.csdn.net/mouday/article/details/131612524" target="_blank" rel="noreferrer">打包部署到github后文件<code>_plugin-vue_export-helper</code>访问不到</a></p><h3 id="关于-gitignore" tabindex="-1">关于 .gitignore <a class="header-anchor" href="#关于-gitignore" aria-label="Permalink to &quot;关于 .gitignore&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>dist 目录可能会在 .gitignore 文件里，在提交时被忽略掉</p><p>但是部署时，需要把 dist 目录提交到 <code>gh-pages</code> 分支，不能被忽略掉</p><p>所以需要再写一个打包命令，在打包时，覆盖掉 .gitignore 文件</p></div><h4 id="package-json" tabindex="-1">package.json <a class="header-anchor" href="#package-json" aria-label="Permalink to &quot;package.json&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">  &quot;scripts&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 新的打包命令，添加参数 --deploy</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">    &quot;build:github&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;run-p type-check </span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">build-deploy {@}</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;"> --&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">    &quot;build-deploy&quot;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&quot;vite build --mode production -- --deploy&quot;</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="vite-config-ts" tabindex="-1">vite.config.ts <a class="header-anchor" href="#vite-config-ts" aria-label="Permalink to &quot;vite.config.ts&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">  plugins</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">    vue</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 自定义插件</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      name: </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;copy-gitignore&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">      writeBundle</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 如果是部署到 github，则覆盖 .gitignore</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> (process.argv.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">includes</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;--deploy&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">)) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">          const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> src</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> path.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">resolve</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(__dirname, </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;.bak/.gitignore&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">          const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#79B8FF;"> dest</span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> path.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">resolve</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(__dirname, </span><span style="--shiki-light:#9ECBFF;--shiki-dark:#9ECBFF;">&#39;.gitignore&#39;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">          fs.</span><span style="--shiki-light:#B392F0;--shiki-dark:#B392F0;">copyFile</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">(src, dest, () </span><span style="--shiki-light:#F97583;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;"> {})</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#E1E4E8;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>在根目录下新建 <code>.bak</code> 文件夹，把 .gitignore 复制到里面，删除掉 dist。在打包时，用来覆盖 .gitignore</p>`,32)]))}const o=i(t,[["render",k]]);export{y as __pageData,o as default};
